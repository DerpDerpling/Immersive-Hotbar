plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group   = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "Fabric"
		url = "https://maven.fabricmc.net/"
	}
	maven {
		url = "https://api.modrinth.com/maven"
	}
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}
}

loom {
	splitEnvironmentSourceSets()
	mods {
		"immersive-hotbar" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

fabricApi {
	configureDataGeneration { client = true }
}

loom {
	accessWidenerPath = file("src/main/resources/immersive-hotbar.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

// ─── Replace stonecutter.version.current with stonecutter.minecraftVersion ───

def isModernMc = stonecutter.eval(project.minecraft_version, ">=1.20.5")

java {
	// if MC ≥1.20.5 → Java 21; else → Java 17
	sourceCompatibility = isModernMc ? JavaVersion.VERSION_21 : JavaVersion.VERSION_17
	targetCompatibility = isModernMc ? JavaVersion.VERSION_21 : JavaVersion.VERSION_17

	// (Optional) force Gradle to select the correct toolchain
	toolchain {
		languageVersion = JavaLanguageVersion.of(isModernMc ? 21 : 17)
	}
}

tasks.withType(JavaCompile).configureEach {
	options.release = isModernMc ? 21 : 17
}

// ───────────────────────────────────────────────────────────────────────────────

jar {
	inputs.property "archivesName", project.base.archivesName
	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}" }
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
	repositories {
		// …your publishing repositories…
	}
}
